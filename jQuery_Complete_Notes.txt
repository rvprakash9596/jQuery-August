							       jQuery
						------------------------------------
						@github: rvprakash9596 [23-Aug-2024]
--------------------------------------------------------------------------------------------------------------------------------------


							Introduction To jQuery
						--------------------------------------

jQuery is a JavaScript Library that came in the year 2006.
It was created by "John Resig" to ease JavaScript Programming.
After learning the concept of jQuery , it will be easier for a developer to work with JavaScript.
It is a "write less, do more" JavaScript library.


Write less , do more .
jQuery eases JavaScript code.
The same code you run in the JavaScript with many lines can be easily worked with jQuery and lessened to a single line of code.


						   	      jQuery - Features
						--------------------------------------
						
Following are the main features of jQuery :
-------------------------------------------
Simple
DOM Traversing
DOM Manipulation
Event Handling
Styles Modification
Effects and Animation
jQuery - UI
CSS3 Compliant
Light Weight Library
Cross Browser Support
Interpreted
-------------------------------------------

Selectors : Use the jQuery selectors to select an HTML element and manipulate it.
-----------
Animation : Animate a div or any other element with jQuery.
-----------
CSS Manipulation : Manipulate an element and apply CSS style to it with jQuery.
------------------
jQuery AJAX : jQuery has a rich set of AJAX methods for developing modern web Applications.
-------------
Event Methods : Call event methods with jQuery. Events are the user's actions , a web page can respond to --------------- , such as page load , mouse click , keystroke etc..

jQuery Traversing : jQuery provides DOM traversal methods to locate descendent elements , find sibling ------------------- elements etc.

Plugins : jQuery has many plugins such as for creating split pages, create slideshow , progressbar , etc. --------- With that , you can also create your own custom plugin.

							   
							jQuery - Set Environment
						--------------------------------------

How to add jQuery in a webpage :
--------------------------------
We can set environment for jQuery using any of the following methods :

Method 1: Download jQuery from the official website jquery.com

Method 2: directly use CDN i.e. Content Delivery network (faster).

Method 2: CDN for jQuery
------------------------
Follow the below given steps for method 2 and directly use CDN and run jQuery:

Step 1: Install VS Code.
Step 2: Set Environment , add jQuery on a webpage and understand the structure.


							  jQuery - Add jQuery in a webpage
						----------------------------------------------

<html>
<head>
    <title>jQuery1</title>
     <!-- Adding CDN Link  -->
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script>
        // jQuery Script Body
    </script>
</head>
<body>
    
</body>
</html>

					
							jQuery - Syntax & 1st program
						---------------------------------------------

jQuery uses a document ready event, which we will learn in the upcoming lessons also.
 
$(document).ready(function() {  
   // code
});

The above function prevents the code from running before the document is ready.

Program 1:
----------

<html>
<head>
    <title>jQuery1</title>
     <!-- Adding CDN Link  -->
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script>
        //jQuery Script Body
        $(document).ready(function(){
            document.write("Hello jQuery");
        });
    </script>
</head>
<body>
    <h1>First jQuery Program</h1>
</body>
</html>


								jQuery functions :
								------------------
val()
text()
html()
attr()
css()
show()
hide()
toggle()
fadeIn()
fadeOut()
fadeToggle()
fadeTo()
slideUp()
slideDown()
slideToggle()
eq
lt
gt
remove()
empty()
append()
after()
prepend()
before()



								jQuery - click() Method
							---------------------------------------

Use the jQuery click() method to trigger an event on the click of an element. For example, on click, it generates an alert box.

Syntax : 	$(selector).click(function(){
--------		// code
		});


Example :
---------
<!DOCTYPE html>
<html>
<head>

<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>

<script>
$(document).ready(function(){
   $("h2").click(function(){
     alert("You clicked me.");
   });
});
</script>
</head>
<body>
 
<h2>I am a heading.</h2>
<p>This is a paragraph.</p>
 
</body>
</html>
 

							jQuery - Selectors
						----------------------------------

jQuery Selectors is used to select an HTML element and manipulate it. 
Selector starts with a dollar sign ($) and parentheses as you can see below.

$()

An element can have an ID,Class,Attribute,Name,Values etc.With jQuery,you can easily select element or elements based on their id , class , etc..

jQuery - Types of Selectors :
-----------------------------
1. jQuery Element (Tag) Selector
2. jQuery #id Selector
3. jQuery .class Selector

1. jQuery Element (Tag) Selector :
----------------------------------
The jQuery element selector is used to select all the elements. The elements such as p, and div are selected based on the name of the element.

The name of the element i.e. the tag name for the element selector goes as a parameter,

==> $("div")
==> $("p")
==> $("h")
and so more..

Example :
---------
<html>
<head>
    <title>Selector in jQuery</title>
     <!-- Adding CDN Link  -->
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script>
        //jQuery Script Body
        $(document).ready(function(){
            $("button").click(function(){
                //$("h1").hide();// valid
                $("h1,div").hide(); //valid
            });
        });
    </script>
    <style>
        button{
            height: 30px;
            width: 300px;
            background-color: purple;
            border-radius: 5px;
            color: white;
            font-size: 15px;
            cursor: pointer;
            border: 2px solid greenyellow;
            margin-top: 10px;
        }
        h1{
            text-align: center; 
            color: blue;
        }
        h2{
            color: red;
        }
        div{
            height: 120px;
            width: 200px;
            background-color: blanchedalmond;
            padding: 10px;
            box-sizing: border-box;
            border: 2px solid red;
        }
    </style>
</head>
<body>
    <h1>मंजिल से ज्यादा खूबसूरत रास्ते होते हैं।</h1>
    <h2>jQuery Selector Program</h2>
    <p>We have to learn this</p>
    <div>
        <p>Let's start Journey of jquery</p>
        <p>Start Now</p>
    </div>
    <button>Hide Element using Element Selector</button>
</body>
</html>


2. jQuery #id Selector :
------------------------
The jQuery id selector uses the id attribute to select and element. For finding element a # character is used for the id selector .
The name of the id is used preceded by a hash(#) character.

==> $("#demo")

<div id="#demo">
	<p> division contents </p>  
</div>

Example :
---------

<html>
<head>
<title>jQuery Id selector</title>
<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<script>
    $(document).ready(function(){
        $("button").click(function(){
            $("#d1").hide();
            $("#demo1").hide();
        });
    });
</script>
</head>
<body>
    <h1 id="demo1">We can't undo the things , but we can make next step better.</h1>
    <h2>Yes brother</h2>
    <div id="d1">
        <p>This is true fact</p>
        <p>I also do same things.</p>
    </div>
    <button>Hide Element using id selector</button>
</body>
</html>



3. jQuery .class Selector :
---------------------------
The jQuery class selector is used to find elements with a given class. For finding elements, a period character is used.

The name of the class is used preceded by a period character,

==> $(".demo")

<div class="demo">
  <p>div content</p>
</div>

Example :
---------

<html>
<head>
<title>jQuery class selector</title>
<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<script>
    $(document).ready(function(){
        $("button").click(function(){
            $(".demo1").hide();
            $(".d1").hide();
        });
    });
</script>
<style>
    button{
        height: 30px;
            width: 250px;
            background-color: purple;
            border-radius: 5px;
            color: white;
            font-size: 15px;
            cursor: pointer;
            border: 2px solid greenyellow;
            margin-top: 10px;
    }
</style>
</head>
<body>
    <h1 class="demo1">We can't undo the things , but we can make next step better.</h1>
    <h2>Yes brother</h2>
    <div class="d1">
        <p>This is true fact</p>
        <p>I also do same things.</p>
    </div>
    <button>Hide Element using class selector</button>
</body>
</html>



							jQuery - Hide an Element 
				    	    ---------------------------------------------

To hide an HTML Element , use the jQuery hide() method.

Example :
---------

<html>
<head>
<title>Hide HTML Element</title>
<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<script>
    $(document).ready(function(){
        $("h2").click(function(){
            $(this).hide();
        });
    });
</script>
<style>
    h2{
        background-color: black;
        color: white;
        display: inline;
        border: 2px double red;
        padding: 2px;
        border-radius: 5px;
    }
</style>
</head>
<body>
    <h1>This is heading level 1</h1>
    <h2>Hide me</h2>
    <p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Nobis, iusto.</p>
</body>
</html>


						          jQuery - Show an Element 
				    		---------------------------------------------

To show an HTML element, use the jQuery show() method.

example :
---------

<html>
<head>
<title>Show HTML Element</title>
<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<script>
    $(document).ready(function(){
       $(".hm").click(function(){
        $("p").hide();
       });
       $(".sm").click(function(){
        $("p").show();
       });
    });
</script>
<style>
    h2{
        background-color: black;
        color: white;
        display: inline;
        border: 2px double red;
        padding: 2px;
        border-radius: 5px;
    }
</style>
</head>
<body>
    <h1>This is heading level 1</h1>
    <h2 class="hm">Hide Lorem Paragraph</h2><br><br>
    <h2 class="sm">Show Lorem Paragraph</h2>
    <p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Nobis, iusto.
        Lorem ipsum dolor sit amet consectetur adipisicing elit. Dicta id soluta cumque aperiam rerum molestias dolorem esse, ipsum debitis at asperiores officiis ullam nemo quas laborum, ratione voluptates, aliquam illo quidem temporibus perspiciatis voluptatem est? Exercitationem eveniet nostrum suscipit voluptatum sint corporis nobis laboriosam maxime id? Cumque corporis omnis esse delectus, accusamus fugiat voluptatibus temporibus dignissimos cum. Accusantium illum vero recusandae laboriosam illo neque quod labore rem aliquid non nesciunt nemo, itaque fugiat. Pariatur ratione aliquam consequuntur velit nobis tempora dolore autem maiores illo repellat molestias facere molestiae quas corporis mollitia deserunt quisquam saepe, veniam blanditiis. Ducimus explicabo illum ipsa!
    </p>
</body>
</html>




							jQuery - Toggle an Element 
				    		---------------------------------------------

To toggle an HTML element , create a button and set the toggle on it , using the jQuery toggle() Method.

Example :
---------

<html>
<head>
<title>Toggle an Element</title>
<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<script>
$(document).ready(function(){
    $("button").click(function(){
        $("p").toggle();
    });
});
</script>
<style>
    button:hover{
        background-color: red;
        cursor: pointer;
    }
    p{
        color: green;
        font-size: 20px;
        font-weight: bold;
    }
</style>
</head>
<body>
    <h1>This is toggle button example using jQuery</h1>
    <button>Toggle me</button>
    <p>This is a demo text</p>
</body>
</html>



							 jQuery - Fade an Element 
				    		---------------------------------------------

With jQuery, we can easily fade any HTML element. Fade means making an element to hide or show in and out. 

1. fadeIn(): Fade in an element . To fade in an invisible element, use the jQuery fadeIn() method.
2. fadeOut(): Fade out an element . To fade out a visible element, use the jQuery fadeOut() method.
3. fadeToggle(): Fade toggle an element . Set both the fade and fade out if you want to set a toggle button. The  jQuery fadeToggle() method fulfills this purpose. You can easily toggle between the fadeIn() and fadeOut() methods using the fadeToggle().



1. Fade-In 

Example :
---------
<html>
<head>
<title>jQuery Fade-In An Element</title>
<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<script>
    $(document).ready(function(){
        $("button").click(function(){
            $("#div1").fadeIn();// fadein bydefault duration 4s
            $("#div2").fadeIn("slow");
            $("#div3").fadeIn(2000);
            $("#div4").fadeIn("fast");
        });
    });
</script>
<style>
div{
    height: 100px;
    width: 100px;
    border: 2px solid red;
    display: none;
    float: left;
}
#div1{
    background-color: blue;
}
#div2{
    background-color: green;
}
#div3{
    background-color: deeppink;
}
#div4{
    background-color: orange;
}
</style>
</head>
<body>
    <h1>Fade An HTML Element</h1>
    <p>four divs will fade in below on the click of a button</p>
    <button>Fade In</button><br><br>
    <div id="div1">Div1</div>
    <div id="div2">Div2</div>
    <div id="div3">Div3</div>
    <div id="div4">Div4</div>
</body>
</html>

2. Fade-Out

Example :
---------
<html>
<head>
<title>jQuery Fade-Out An Element</title>
<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<script>
    $(document).ready(function(){
        $("button").click(function(){
            $("#div1").fadeOut();// fadein bydefault duration 4s
            $("#div2").fadeOut("slow");
            $("#div3").fadeOut(2000);
            $("#div4").fadeOut("fast");
        });
    });
</script>
<style>
div{
    height: 100px;
    width: 100px;
    border: 2px solid red;
    float: left;
}
#div1{
    background-color: blue;
}
#div2{
    background-color: green;
}
#div3{
    background-color: deeppink;
}
#div4{
    background-color: orange;
}
</style>
</head>
<body>
    <h1>Fade An HTML Element</h1>
    <p>four divs will fade out below on the click of a button</p>
    <button>Fade Out</button><br><br>
    <div id="div1">Div1</div>
    <div id="div2">Div2</div>
    <div id="div3">Div3</div>
    <div id="div4">Div4</div>
</body>
</html>


3. Fade-Toggle :
----------------

Example :
---------
<html>
<head>
<title>jQuery Fade-Toggle An Element</title>
<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<script>
    $(document).ready(function(){
        $("button").click(function(){
            $("#div1").fadeToggle();//by default duration 4s
            $("#div2").fadeToggle("slow");
            $("#div3").fadeToggle(2000);
            $("#div4").fadeToggle("fast");
        });
    });
</script>
<style>
div{
    height: 100px;
    width: 100px;
    border: 2px solid red;
    float: left;
}
#div1{
    background-color: blue;
}
#div2{
    background-color: green;
}
#div3{
    background-color: deeppink;
}
#div4{
    background-color: orange;
}
</style>
</head>
<body>
    <h1>Fade An HTML Element</h1>
    <p>four divs will fade toggled below on the click of a button</p>
    <button>Fade Toggle</button><br><br>
    <div id="div1">Div1</div>
    <div id="div2">Div2</div>
    <div id="div3">Div3</div>
    <div id="div4">Div4</div>
</body>
</html>



							 jQuery - Slide Elements
						-----------------------------------------

To set a sliding effect on HTML elements, jQuery provides the sliding effect. This is an effect that increases and decreases the height of an element with the click of a button.

1. slideDown()
2. slideUp()
3. slideToggle()

1. jQuery Slide Down :
----------------------
To slide down an HTML element, use the slideDown() method in jQuery.


Example :
---------
<html>
<head>
<title>Slide Down</title>
<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>

<script>
    $(document).ready(function(){
        $("#d1").click(function(){
            $("#d2").slideDown("500");
            //$("#d2").slideDown("fast");
            //$("#d2").slideDown("slow");
        });
    });
</script>
<style>
    #d1,#d2{
       padding: 15px;
       text-align: center;
       font-size: 25px;
       background-color: black;
       border: 2px double red;
       color: white;
       border-radius: 5px;
    }
    #d2{
        display: none;
        padding: 75px;
        font-size: 35px;
        /* background-color: orangered; */
        border: 5px solid blue;
    }
</style>
</head>
<body>
    <p>Click the below div to Slide down </p>
    <div id="d1">Slide Down by clicking here</div>
    <div id="d2" style="margin-top: 20px;">Saurabh Caterers</div>
</body>
</html>

2. jQuery Slide UP :
--------------------
To slide up an HTML element, use the slideUp() method in jQuery.

Example :
---------
<html>
<head>
<title>Slide Up</title>
<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>

<script>
    $(document).ready(function(){
        $("#d1").click(function(){
            $("#d2").slideUp("1000");
            // $("#d2").slideUp("fast");
            // $("#d2").slideUp("slow");
        });
    });
</script>
<style>
    #d1,#d2{
       padding: 15px;
       text-align: center;
       font-size: 25px;
       background-color: black;
       border: 2px double red;
       color: yellow;
       border-radius: 5px;
    }
    #d2{
        padding: 75px;
        font-size: 35px;
        /* background-color: orangered; */
        border: 5px solid blue;
    }
    #d1{
        cursor: pointer;
    }
</style>
</head>
<body>
    <p>Click the below div to Slide Up.. </p>
    <div id="d1">Slide Up by clicking here</div>
    <div id="d2" style="margin-top: 20px;">Saurabh Caterers</div>
</body>
</html>


3. jQuery Slide Toggle :
------------------------
Slide up and down elements if you set a toggle button. The  jQuery slideToggle() method fulfills this purpose. You can easily toggle between the slideUp() and slideDown() methods using the slideToggle().
Slide up the elements if they are sliding down using the slideUp() method in jQuery. Slide down the elements if they are sliding up using the slideDown() method in jQuery.

Example :
---------

<html>
<head>
<title>Slide Toggle</title>
<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>

<script>
    $(document).ready(function(){
        $("#d1").click(function(){
            $("#d2").slideToggle("1000");
            // $("#d2").slideToggle("fast");
            // $("#d2").slideToggle("slow");
        });
    });
</script>
<style>
    #d1,#d2{
       padding: 15px;
       text-align: center;
       font-size: 25px;
       background-color: black;
       border: 2px double red;
       color: yellow;
       border-radius: 5px;
    }
    #d2{
        padding: 75px;
        font-size: 35px;
        /* background-color: orangered; */
        border: 5px solid blue;
    }
    #d1{
        cursor: pointer;
    }
</style>
</head>
<body>
    <p>Click the below div to Slide Toggle.. </p>
    <div id="d1">Slide Toggle by clicking here</div>
    <div id="d2" style="margin-top: 20px;">Saurabh Caterers</div>
</body>
</html>


							     jQuery - Create Animation
						     -----------------------------------------

To create Animations on a web page , use the jQuery animate() method . To move an element on a web page , you need to also use the position position property.Set the value to relative,fixed,or absolute for the HTML element.
Let's see how to :
1. Animate a div with animate() method
2. Animate a div with animate() method - use multiple properties

1. Animate a div with animate() method :
----------------------------------------
To animate a div, use the animate() method. In the below example, we have animated a div and moved it to the right. The left property is set to 300px and this is the limit till when the div will animate:

Example :
---------
<html>
<head>
<title>Animate A Div</title>
<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<script>
    $(document).ready(function(){
        $("button").click(function(){
            $("div").animate({left:`300px`});
        });
    });
</script>
<style>
    div{
        position: absolute;
        background-color: black;
        color: yellow;
        padding: 20px;
        border: 12px double blue;
        margin-top: 10px;
        border-radius: 8px;
        font-weight: bold;
    }
</style>
</head>
<body>
    <h1>RaviPrakash4344</h1>
    <p>Click the below button to animate the below box.</p>
    <button>Animate Button</button>
    <div>This box will get animated using jQuery</div>
</body>
</html>


2. Animate a div with animate() method - use multiple properties :
------------------------------------------------------------------
In this example, we will animate a Div and update the height, width, and font size as well. With jQuery, we can easily animate a div using the animate() method and update the div properties alongside. That means we can change multiple properties of that specific element.
Let us see an example where we will animate a div and update the height, width, and font size properties as well. 
For the animate() method, the font-size property is to be written in camel-case i.e. fontSize. This works for other properties as well:

Example :
---------
<html>
<head>
<title>Animation div 2</title>
<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<script>
    $(document).ready(function(){
        $("button").click(function(){
            $("div").animate({
                left :`200px`,
                height:`100px`,
                width:`400px`,
                fontSize: `30px`
            });
        });
    });
</script>
<style>
    div{
        position: absolute;
        background-color: black;
        color: yellow;
        padding: 20px;
        border: 12px double blue;
        margin-top: 10px;
        border-radius: 8px;
        font-weight: bold;
    }
</style>
</head>
<body>
    <h1>RaviPrakash4344</h1>
    <p>Click the below button to animate the below box.</p>
    <button>Animate Button</button>
    <div>This box will get animated using jQuery and the properties will also changed</div>
</body>
</html>


							jQuery - Traversing
						------------------------------------

Introduction to jQuery Traversing :
-----------------------------------
Consider an HTML web page as a DOM tree. Traversing means moving through the tree, like moving up, down, etc. Therefore, the need to understand the concept of Ancestors, Descendants, and Siblings is a must in jQuery. Consider the Ancestor is a parent, the Descendants are children, whereas the Siblings have similar parents.

Now, you must be wondering what DOM is. The Document Object Model (DOM) defines the logical structure of documents and the way a document is accessed and manipulated. It is a W3C (World Wide Web Consortium) standard.

Let us understand the traversing using the below figure:



							div         <-------------Parent(Ancestor)
							 |
							 |
					-----------------------------------------
					|					|
       left child of div --------->    ul					ol       <----- right child of div
					|					|
			     -----------------------                ----------------------------
			     |			   |		    |                          |
			    li			  li   		   li			       li
			     |			   |                |                           |
	             -----------------				    |				|
                     |               |				  strong		      strong
		   span             span




jQuery – Find Ancestors of an element :
---------------------------------------
An Ancestor is a parent, grandparent, great grand-parent of an element. Let us see the above figure again:

The <div> is the parent of <ul> and <ol>
The <ul> element is the parent of both the <li> elements
The <ol> element is the parent of both the <li> elements
The left child of the <ul> is <li>. This <li> is the parent of both the <span> elements
The left and right child of the <ol> is <li>. This <li> is the parent of <strong>

Ancestors suggest traversing up in the DOM tree and the following are the supported methods in jQuery:

1. parent() : returns the direct parent element of the selected element
2. parents() : returns all the ancestor elements of the selected element
3. parentsUntil() : returns the ancestors between two element

Let us learn about each method one by one:

1.The parent() method in jQuery :
---------------------------------

<html>
<head>
<title>jQuery Traversing - parent() method</title>
<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<script>
    $(document).ready(function(){
        $("span").parent().css({"background":"black", "color":"white", "border":"5px solid red"});
    });
</script>
<style>
    .ancestors *{
        display: block;
        border: 5px solid teal;
        font-size: 20px;
        margin-top: 10px;
        padding: 10px;    
    }
</style>
</head>
<body>
<h1 style="text-align: center; color:red ">jQuery-Traversing : parent()</h1>
<div class="ancestors">
    <div style="width: 600px;"> div (great grandparent)
        <ul> ul (grandparent)
            <li> li (parent)
                <span>span</span>
                <span>span</span>
            </li>
            <li>li
            </li>
        </ul>
    </div>
</div>
</body>
</html>



2.The parents() method (ancestors) in jQuery :
----------------------------------------------
The jQuery parents() method returns all the ancestor elements of the selected element. Let us see an example wherein we will return the ancestors of the <span> element:

Examle 
-------

<html>
<head>
<title>jQuery Traversing - parents() method</title>
<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<script>
    $(document).ready(function(){
        $("span").parents().css({"color":"red", "font-size":"24px" ,"border":"5px solid green"});
    });
</script>
<style>
    .ancestors *{
        display: block;
        border: 5px solid black;
        font-size: 20px;
        margin-top: 10px;
        padding: 10px;    
    }
</style>
</head>
<body>
<h1 style="text-align: center; color:red ">jQuery-Traversing : parent()</h1>
<div class="ancestors">
    <div style="width: 600px;"> div (great grandparent)
        <ul> ul (grandparent)
            <li> li (parent)
                <span>span</span>
                <span>span</span>
            </li>
            <li>li
            </li>
        </ul>
    </div>
</div>
</body>
</html>


3.The parentsUntil() method (ancestors) in jQuery :
---------------------------------------------------
If you want to return the ancestors between two elements, then use the parentsUntil() method in  jQuery. Let us see an example wherein we will return the ancestors between <span> and <div>:

Example :
---------
<html>
<head>
<title>jQuery Traversing - parentsUntil() method</title>
<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<script>
    $(document).ready(function(){
        $("span").parentsUntil("div").css({"color":"red", "font-size":"24px" ,"border":"5px solid green"});
    });
</script>
<style>
    .ancestors *{
        display: block;
        border: 2px dashed black;
        font-size: 20px;
        margin-top: 10px;
        padding: 10px;    
    }
</style>
</head>
<body>
<h1 style="text-align: center; color:red ">jQuery-Traversing : parentsUntil()</h1>
<div class="ancestors">
    <div style="width: 600px;"> div (great grandparent)
        <ul> ul (grandparent)
            <li> li (parent)
                <span>span</span>
                <span>span</span>
            </li>
            <li>li
            </li>
        </ul>
    </div>
</div>
</body>
</html>


						jQuery – Find Descendants of an element :
						-----------------------------------------
A Descendant is a child, grandchild, and great grand-child of an element. Let us see the figure again:



							div         <-------------Parent(Ancestor)
							 |
							 |
					-----------------------------------------
					|					|
       left child of div --------->    ul					ol       <----- right child of div
					|					|
			     -----------------------                ----------------------------
			     |			   |		    |                          |
			    li			  li   		   li			       li
			     |			   |                |                           |
	             -----------------				    |				|
                     |               |				  strong		      strong
		   span             span




Descendants suggest traversing down in the DOM tree and the following are the supported methods in jQuery:

1. children()
2. find()


1. The children() method in jQuery :
------------------------------------
If you want to return the children of the selected element, use the jQuery children() method. Since it returns the direct children, therefore it traverses down .

<html>
<head>
    <title>children() method in jQuery</title>
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script>
        $(document).ready(function(){
            $("ul").children().css({"color":"blue","font-size":"24px" , "border":"4px solid red"})
        });
    </script>
</head>
<style>
    .descendants *{
        display: block;
        border: 4px dashed teal;
        color: orange;
        font-size: 20px;
        padding: 10px;
        margin: 10px;
    }
</style>
<body>
    <h1>children() in jQuery</h1>
    <div class="descendants">
        <div style="width: 600px;">div (great grandparent)
            <ul>ul (grandparent)
                <li>li (parent)
                    <span>span</span>
                    <span>span</span>
                </li>
                <li>li
                </li>
            </ul>
        </div>
    </div>
</body>
</html>


2. The find() method in jQuery :
--------------------------------

To return the descendant elements of the selected element, use the jQuery find() method. Let us see an example to return all <span> elements that are descendants of <div>:

<html>
<head>
    <title>find() method in jQuery</title>
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script>
        $(document).ready(function(){
            $("div").find("li").css({"color":"blue","font-size":"24px" , "border":"4px solid red"})
        });
    </script>
</head>
<style>
    .descendants *{
        display: block;
        border: 4px dashed teal;
        color: orange;
        font-size: 20px;
        padding: 10px;
        margin: 10px;
    }
</style>
<body>
    <h1>find() in jQuery</h1>
    <div class="descendants">
        <div style="width: 600px;">div (great grandparent)
            <ul>ul (grandparent)
                <li>li (parent)
                    <span>span</span>
                    <span>span</span>
                </li>
                <li>li
                </li>
            </ul>
        </div>
    </div>
</body>
</html>


						jQuery – Find Siblings of an element
					------------------------------------------------------

In jQuery, we can easily find the siblings of an element. Let us see the figure again:


							div         <-------------Parent(Ancestor)
							 |
							 |
					-----------------------------------------
					|					|
       left child of div --------->    ul					ol       <----- right child of div
					|					|
			     -----------------------                ----------------------------
			     |			   |		    |                          |
			    li			  li   		   li			       li
			     |			   |                |                           |
	             -----------------				    |				|
                     |               |				  strong		      strong
		   span             span		


In the above figure, the <ul> and <ol> are siblings since they have the same parent .
Siblings suggest traversing sideways in the DOM tree and the following are the supported methods in jQuery:

1. siblings() 	: Returns the siblings of the selected elements. 
2. next()	: Returns the next siblings of the selected elements.
3. nextAll()	: Returns all the next siblings of the selected elements.
4. nextUntil()	: Returns all the next siblings between two elements.
5. prev()	: Returns the previous sibling of the selected elements.
6. prevAll()	: Returns all the previous siblings of the selected elements.
7. prevUntil()	: Returns all the previous siblings between two elements.


1. The siblings() method in jQuery :
------------------------------------
As the name suggests, the siblings() method returns the siblings of the selected element. Let us see an example. We will find the siblings of the <p> element:

<html>
<head>
<title>siblings() in jQuery</title>
<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<script>
    $(document).ready(function(){
        $("p").siblings().css({"color":"blue","font-size":"24px","border":"4px solid green"});
    });
</script>
<style>
    .siblings *{
        display: block;
        border: 2px dashed blue;
        color: orangered;
        font-size: 20px;
        margin: 10px;
        padding: 20px;
    }
</style>
</head>
<body>
<div class="siblings">
    <div style="width: 800px;">
        <h1>H1</h1>
        <p>P</p>
        <h2>H2</h2>
        <h3>H3</h3>
        <ol>
            <li>LI 1</li>
            <li>LI 2</li>
        </ol>
    </div>
</div>
</body>
</html>


2. The next() method in jQuery :
--------------------------------
To return the next sibling of the selected element, use the next() method in jQuery. Let us see an example. We will find the next sibling of <p>:

<!DOCTYPE html>
<html>
<head>
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<script>
$(document).ready(function(){
   $("p").next().css({"color": "blue", "font-size": "24px","border": "4px solid red"});
});
</script>
<style>
.siblings * { 
  display: block;
  border: 4px dashed black;
  color: black;
  font-size: 20px;
  padding: 10px;
  margin: 10px;
}
</style>
</head>
<body>
 
<div class="siblings">
  <div style="width:600px;">--- parent --- 
    <h1>h1</h1>
    <p>p</p>
    <h2>h2</h2>
    <ol>ol
       <li>li</li>
       <li>li</li>
    </ol>
  </div>
</div>
 
</body>
</html>


3. The nextUntil() method in jQuery :
-------------------------------------
To return all the next siblings between two elements, use the nextUntil() method in jQuery. Let us see an example. We will find all the next siblings between <h1> and <ol>:

<!DOCTYPE html>
<html>
<head>
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<script>
$(document).ready(function(){
   $("p").nextAll().css({"color": "blue", "font-size": "24px","border": "4px solid red"});
});
</script>
<style>
.siblings * { 
  display: block;
  border: 4px dashed black;
  color: black;
  font-size: 20px;
  padding: 10px;
  margin: 10px;
}
</style>
</head>
<body>
<div class="siblings">
  <div style="width:600px;">--- parent --- 
    <h1>h1</h1>
    <p>p</p>
    <h2>h2</h2>
    <ol>ol
       <li>li</li>
       <li>li</li>
    </ol>
  </div>
</div>
</body>
</html>


4. The prev() method in jQuery :
--------------------------------
To return the previous sibling of the selected element, use the prev() method in jQuery. Let us see an example. We will find the previous sibling of the <p> element:

<!DOCTYPE html>
<html>
<head>
<title>prev() method in jQuery</title>
<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<script>
$(document).ready(function(){
   $("h2").prev().css({"color": "blue", "font-size": "24px","border": "4px solid red"});
});
</script>
<style>
.siblings * { 
  display: block;
  border: 4px dashed black;
  color: black;
  font-size: 20px;
  padding: 10px;
  margin: 10px;
}
</style>
</head>
<body>
 
<div class="siblings">
  <div style="width:600px;">--- parent --- 
    <h1>h1</h1>
    <p>p</p>
    <h2>h2</h2>
    <ol>ol
       <li>li</li>
       <li>li</li>
    </ol>
  </div>
</div>
 
</body>
</html>



						

							 jQuery – Get Content
						-------------------------------------


To get the content from a web page using jQuery, we can use the 
text() methods
html() methods
val() methods 
In this lesson, we will learn how to,
A. Get the Text of the selected element
B. Get Content from the Form Fields

A. Get the Text of the selected element :
-----------------------------------------
To get the text of the selected element in jQuery, use the text() and html() methods. Let us see an example wherein we will get the text of the <p> element with id demo:

<html>
<head>
<title>text() & html() method in jQuery</title>
<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<script>
$(document).ready(function(){
   $("#btn1").click(function(){
    alert($("#demo").text());
   });
   $("#btn2").click(function(){
    alert($("#demo").html());
   });
});
</script>
<style>
    #demo{
        background-color: black;
        color: white;
        font-size: 20px;
    }
    button{
        background-color: antiquewhite;
        font-size: 20px;
        color: black;
        text-align: center;
        border-radius: 5px;
        cursor: pointer;
    }
    button:hover{
        background-color: red;
    }
</style>
</head>
<body>
    <p id="demo">This is a <em>demo text</em>.This is another <strong>demo text</strong>.</p>
    <p>Click the below button to <b>get</b> the text content of the HTML </p>

    <button id="btn1">Text</button>
    <button id="btn2">HTML</button>
</body>
</html>


B. Get Content from the Form Fields:
------------------------------------
To get the content of the Form fields,we use the val() method in jQuery.

<html>
<head>
<title>val() method</title>
<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<script>
$(document).ready(function(){
   $("#btn1").click(function(){
    alert("Student Name = "+$("#sname").val());
   })
   $("#btn2").click(function(){
    alert("Student Branch = "+$("#sbranch").val());
   });
   $("#btn3").click(function(){
    alert("Student Roll No = "+$("#srn").val());
   })
});
</script>
<style>
    button{
        background-color: antiquewhite;
        font-size: 20px;
        height: 35px;
        color: black;
        text-align: center;
        border-radius: 5px;
        cursor: pointer;
    }
    button:hover{
        background-color: green;
        color: white;
    }
</style>
</head>
<body>
    <h1>Students Details</h1>
    <p>Student Name:<input type="text" id="sname" value="Ravi Prakash"></p> 
    <p>Student Branch:<input type="text" id="sbranch" value="CSE"></p> 
    <p>Student RollNo:<input type="number" id="srn" value="27"></p> <br></br>

    <button id="btn1">Get Student Name</button>
    <button id="btn2">Get Student Branch</button>
    <button id="btn3">Get Student RollNo</button>
</body>
</html>



						          jQuery – Set Content
						 -------------------------------------

To set the content on a web page using jQuery, we can use the 
text() methods
html() methods
val() methods

In this lesson, we will learn how to,

A. Set the Text of the selected element
B. Set the Content of the Form Fields


A. Set the Text of the selected element :
-----------------------------------------
To set the text of the selected element in jQuery, use the text() and html() methods. 

<html>
<head>
<title></title>
<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<script>
$(document).ready(function(){
   $("#btn1").click(function(){
    $("p").text("This text is adding using jQuery text() method");
   });
   $("#btn2").click(function(){
    $("p").html("This text is <em> adding using jQuery text()</em> <b> method</b>.");
   });
});
</script>
<style>
    p{
        background-color: black;
        color: white;
        font-size: 30px;
        display: inline;
    }
    button{
        background-color: antiquewhite;
        font-size: 20px;
        height: 35px;
        color: black;
        text-align: center;
        border-radius: 5px;
        cursor: pointer;
        line-height: 35px;
    }
    button:hover{
        background-color: green;
        color: white;
    }
</style>
</head>
<body>
    <p>Click below button to set the Text and HTML</p><br>

    <button id="btn1">Set the Text</button>
    <button id="btn2">Set the HTML</button>
</body>
</html>


B. Set the Content of the Form Fields :
---------------------------------------
To set the content of the Form fields, use the val() method in jQuery.

<html>
<head>
<title>Set val() method</title>
<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<script>
$(document).ready(function(){
   $("#btn1").click(function(){
    $("#sname").val("Ravi Prakash");
   });
   $("#btn2").click(function(){
    $("#sbranch").val("CSE");
   });
   $("#btn3").click(function(){
    $("#srn").val("27");
   })
});
</script>
<style>
    h1{
        text-align: center;
    }
    button{
        background-color: antiquewhite;
        font-size: 20px;
        height: 35px;
        color: black;
        text-align: center;
        border-radius: 5px;
        cursor: pointer;
    }
    button:hover{
        background-color: green;
        color: white;
    }
</style>
</head>
<body>
    <h1>HTML Form</h1>
    <h1>Students Details</h1>
    <p>Student Name:<input type="text" id="sname" value=""></p> 
    <p>Student Branch:<input type="text" id="sbranch" value=""></p> 
    <p>Student RollNo:<input type="number" id="srn" value=""></p> <br></br>

    <button id="btn1">Set Student Name</button>
    <button id="btn2">Set Student Branch</button>
    <button id="btn3">Set Student RollNo</button>
</body>
</html>




							 jQuery – Add Element
						 -------------------------------------

Here we will learn how to add new elements to a web page using jQuery. Let us see the jQuery methods to add new content:

1. append()  : The append() method in jQuery is used to add the content at the end of the selected element.
2. after()   : The after() method in jQuery is used to add the content after the selected element.
3. prepend() : The prepend() method in jQuery is used to add the content at the start of the selected element.
4. before()  : The before() method in jQuery is used to add the content before the selected element.


1. jQuery append() Method :
---------------------------
The append() method in jQuery is used to add the content at the end of the selected element. Let us see an example wherein we will append text to the <h1> element:

<html>
<head>
<title>append() method</title>
<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<script>
$(document).ready(function(){
   $("#btn1").click(function(){
    $("h1").append("Ravi Prakash");
    });
});
</script>
<style>
    h1{
        text-align: center;
    }
    button{
        background-color: antiquewhite;
        font-size: 20px;
        height: 35px;
        color: black;
        text-align: center;
        border-radius: 5px;
        cursor: pointer;
        margin-left: 700px;
    }
    button:hover{
        background-color: green;
        color: white;
    }
</style>
</head>
<body>
    <h1>jQuery </h1>
    <h2>We will appending a word in above heading</h2>
    <h2>click the below button to append</h2>
    <button id="btn1">Append</button>
</body>
</html>


2. jQuery after() Method :
--------------------------
The after() method in jQuery is used to add the content after the selected element. Let us see an example wherein we will add content after the <h2> element:

<html>
<head>
<title>after() method</title>
<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<script>
$(document).ready(function(){
  $("#btn").click(function(){
    $("h2").after("<p> added after</p>");
  });
});
</script>
</head>
<body>
<h1>Demo Heading 1</h1>
<h2>Demo Heading 2</h2>
<h2>Demo Heading 2</h2>
<h3>Demo Heading 3</h3>
<p>Click the below button to add content after the h2 heading</p>
<button id="btn">Add Content after h2 element</button>
</body>
</html>



3.jQuery prepend() Method :
---------------------------
The prepend() method in jQuery is used to add the content at the start of the selected element. Let us see an example wherein we will prepend text to the <h1> element:

<!DOCTYPE html>
<html>
<head>
<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<script>
$(document).ready(function(){
  $("#btn").click(function(){
    $("h1").prepend("<em>Demo </em>");
  });
});
</script>
</head>
<body>
<h1>Heading</h1>
<p>We will prepend a word in the above heading.</p>
<p>Click the below button to prepend</p>
<button id="btn">Prepend</button>
</body>
</html>


4.jQuery before() Method :
--------------------------
The before() method in jQuery is used to add the content before the selected element. Let us see an example wherein we will add content before the <h2> element:

<!DOCTYPE html>
<html>
<head>
<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<script>
$(document).ready(function(){
  $("#btn").click(function(){
    $("h2").before("<p> Demo Text</p>");
  });
});
</script>
</head>
<body>
<h1>Demo Heading 1</h1>
<h2>Demo Heading 2</h2>
<h2>Demo Heading 2</h2>
<h3>Demo Heading 3</h3>
<p>Click the below button to add content before the h2 heading</p>
 
<button id="btn">Add Content before h2 element</button>
 
</body>
</html>


							       jQuery – Remove Element
						 	-------------------------------------

In this lesson, we will learn how to remove elements from a web page using jQuery. Let us see the jQuery methods to remove content:

1. remove()
2. empty()


1.jQuery remove() method :
--------------------------
The remove() method in jQuery is used to remove the selected element and its child elements. In the below example, we will remove the <p> element:

<!DOCTYPE html>
<html>
<head>
<title>remove() method</title>
<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<script>
$(document).ready(function(){
  $("#btn").click(function(){
    $("p").remove();
  });
});
</script>
<style> 
    p {
      height:50px;
      width:500px;
      border:1px solid black;
      background:orange;
      color: blue;
    }
    button{
        background-color: antiquewhite;
        font-size: 20px;
        height: 35px;
        color: black;
        text-align: center;
        border-radius: 5px;
        cursor: pointer;
        margin-left: 200px;
    }
    button:hover{
        background-color: green;
        color: white;
    }
</style>
</head>
<body>
<h1>remove() method</h1>
<p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Quaerat, illum.</p>
<p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Quaerat, illum.</p>
<p>Click the below button to add content before the h2 heading</p>
<button id="btn">Remove</button>
</body>
</html>


1.jQuery empty() method :
-------------------------
The empty() method in jQuery is used to remove the child elements and content. It takes elements out of the DOM but will not remove the element. In the below example, we will remove the content of the <p> element but <p> will not get removed:


<!DOCTYPE html>
<html>
<head>
<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<script>
$(document).ready(function(){
  $("#btn").click(function(){
    $("p").empty();
  });
});
</script>
<style> 
    p {
      height:50px;
      width:500px;
      border:1px solid black;
      background:orange;
      color: blue;
    }
    button{
        background-color: antiquewhite;
        font-size: 20px;
        height: 35px;
        color: black;
        text-align: center;
        border-radius: 5px;
        cursor: pointer;
        margin-left: 200px;
    }
    button:hover{
        background-color: green;
        color: white;
    }
    </style>
</head>
<body>
<h1>empty() method</h1>
<p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Quaerat, illum.</p>
<p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Quaerat, illum.</p>
<p>Click the below button to add content before the h2 heading</p>
 
<button id="btn">Empty</button>
 
</body>
</html>




							jQuery – Add CSS Class
						=======================================

To add a class to the selected element, use the addClass() method in jQuery. We can add:

1.A single class
2.Multiple classes
3.Add a single class to different elements
4.Add multiple classes to different elements

							1.Add a single class
						     ==========================
We will add a single class demo here using the addClass() method in jQuery:

Example :
---------

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>addClass() Method</title>
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script>
        $(document).ready(function(){
          $("button").click(function(){
            $("h1").addClass("demo");
          });
        });
        </script>
        <style>
        .demo {
          background: navy;
          color: white;
          display: inline;
          padding: 10px;
          border-radius: 5px;
          border: 5px double red;
          margin-left: 100px;
        }
        </style>
</head>
<body>
    <h1>This is addClass() Method</h1>
    <p>This is a paragraph1</p>
    <h2>This is 2nd level heading</h2>
    <p>This is a Paragraph2</p>
    <button>Add a single class</button>
</body>
</html>



							JQuery – Remove CSS Class
						==========================================

To remove a class from the selected element, use the removeClass() method in jQuery. We can remove:

1.Remove a single class
2.Remove a single class from different elements


							1.Remove a single class
						    ================================
To remove a single class on a web page, use the removeClass() method in jQuery. In the below example, we will remove a single class demo here:

Example :
---------

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>jQuery removeClass() Method</title>
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script>
        $(document).ready(function(){
          $("button").click(function(){
            $("h1").removeClass("demo");
          });
        });
    </script>
    <style>
        .demo {
          background: red;
          color: white;
        }
    </style>
</head>
<body>
<h1 class="demo">Heading 1</h1>
<p>This is demo text</p>
<button>Remove a single class</button>
</body>
</html>

						Remove a single class from different elements :
					=================================================================

To remove a single class from different elements on a web page, use the removeClass() method in jQuery. We will remove a single class demo here from different elements, such as <h1>, <h2>, <h3>:


Example :
---------

<!DOCTYPE html>
<html>
<head>
<title>remove multiple class</title>
<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<script>
$(document).ready(function(){
  $("button").click(function(){
    $("h1, h2, h3").removeClass("demo");
  });
});
</script>
<style>
.demo {
  background: red;
  color: white;
}
</style>
</head>
<body>
<h1 class="demo">Heading 1</h1>
<p>This is demo text</p>
<h2 class="demo">Heading 2</h2> 
<p>This is another demo text.</p> 
<h3  class="demo">Heading 3</h3>
<p>This is yet another demo text.</p>
<button>Remove a single class from different elements</button>
</body>
</html>



                                        jQuery – Toggle CSS Class
                                    ==================================

To add or remove a class at the click of a button i.e., toggle, use the toggleClass() method in jQuery. Let us see an example wherein we add a class and set the CSS properties for background color and font color for <h1>, <h2>, and <h3> elements with the click of a button. The same button clicked again will remove the CSS we set before i.e. the class will be removed:

Example :
---------
<!DOCTYPE html>
<html>
<head>
    <title>toggleClass() Method</title>
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<script>
$(document).ready(function(){
  $("button").click(function(){
    $("h1, h2, h3").toggleClass("demo");
  });
});
</script>
<style>
.demo {
  background: blue;
  color: white;
  text-align: center;
  border-radius: 10px;
  border: 5px dashed red;
  /* display: inline; */
}
</style>
</head>
<body>
<h1>Heading 1</h1>
<p>This is demo text</p>
<h2>Heading 2</h2>
<p>This is another demo text.</p>
<h3>Heading 3</h3>
<p>This is yet another demo text.</p>
<button>toggleClass()</button>
</body>
</html>



                                        jQuery – Dimension Methods
                                    ==================================
We all know about Margins, Padding, Borders, etc of an element, but some jQuery built-in methods also calculate the dimensions of an element on a web page. These methods get or set the width or height of an element and also cover the concept of excluding and/ or including padding, border, and margin. The following are the methods:

1.width(): Get or set the width of an element. Excludes padding, border, and margin
2.height(): Get or set the height of an element. Excludes padding, border, and margin
3.innerWidth(): Get or set the width of an element. Includes the padding
4.innerHeight(): Get or set the height of an element. Includes the padding
5.outerWidth(): Get or set the width of an element. It includes the padding and border
6.outerHeight(): Get or set the height of an element. It includes the padding and border

                                        1.jQuery width() method
                                    ==============================
The width() method in jQuery is used to get or set the width of an element. It excludes padding, border, and margin. 

Example :
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>width() method</title>
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script>
        $(document).ready(function(){
            $("button").click(function(){
                let txt = "";
                txt+="Width ="+$(".demo").width();
                $(".demo").html(txt);
            });
        });
    </script>
    <style>
        .demo{
            height: 100px;
            width: 200px;
            background-color: teal;
            padding: 15px;
            margin: 15px;
            border: 5px dashed red;
            color: white;
            font-size: 30px;
        }
        button{
            background-color: black;
            color: white;
            border: 2px double red;
            border-radius: 5px;
            font-size: 20px;
            cursor: pointer;
            padding: 5px;
            margin-left: 85px;
        }
    </style>
</head>
<body>
    <h1>Get the Width</h1>
    <div class="demo"></div><br>
    <button>Get Width</button>
    <p>Click the above button to get the width of the box</p>
</body>
</html>

                                       2.jQuery height() method
                                    ==============================
The height() method in jQuery is used to get or set the height of an element. It excludes padding, border, and margin.

Example :
---------
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>height() method</title>
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script>
        $(document).ready(function(){
            $("button").click(function(){
                let txt="";
                txt=txt+"Height ="+$(".demo").height();
                $(".demo").html(txt);
            });
        });
    </script>
    <style>
        .demo{
            height: 130px;
            width: 400px;
            padding: 15px;
            margin: 12px;
            border: 2px solid yellow;
            background: teal;
            color: white;
            font-size: 30px;
            text-align: center;
            line-height: 130px;
        }
        button {
            background: black;
            color: white;
            font-size: 25px;
            cursor: pointer;
            margin-left: 180px;
            border-radius: 4px;
            border: 2px solid red;
        }
    </style>
</head>
<body>
<h1>Get the Height</h1>
<div class="demo"></div><br>
<button>Height</button>
<p>Click the above button to get the height of the box</p>
</body>
</html>

                                            2.jQuery innerWidth() method
                                         ===================================
The innerWidth() method in  jQuery is used to get or set the width of an element. It includes padding.

Example :
---------
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>innerWidth() method</title>
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script>
        $(document).ready(function(){
          $("button").click(function(){
            let txt = "";
                txt += "Inner Width = " + $(".demo").innerWidth();
                $(".demo").html(txt);
          });
        });
    </script>
    <style>
        .demo {
                height: 130px;
                width: 400px;
                padding: 15px;
                margin: 12px;
                border: 2px solid yellow;
                background: black;
                border: 2px solid red;
                color: red;
                text-align: center;
                line-height: 130px;
                font-size: 30px;
                }
        button {
                background: black;
                color: yellow;
                font-size: 25px;
                margin-left: 150px;
                border-radius: 5px;
                /* cursor: progress; */
                cursor: pointer;
                }
    </style>
  </head>
  <body>
    <h1>Get the Inner Width</h1>

    <div class="demo"></div><br />

    <button>Inner Width</button>

    <p>Click the above button to get the inner width of the box</p>
  </body>
</html>

                                jQuery innerHeight() method
                            ====================================
The innerHeight() method in jQuery is used to get or set the height of an element. It includes padding.

Example :
---------
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>innerHeight() method</title>
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script>
        $(document).ready(function(){
            $("button").click(function(){
                let txt="";
                txt=txt+"Inner Height = " +$(".demo").innerHeight();
                $(".demo").html(txt);
            });
        });
    </script>
    <style>
        .demo {
                height: 130px;
                width: 400px;
                padding: 15px;
                margin: 12px;
                border: 2px double red;
                background: black;
                color: yellow;
                font-size: 30px;
                margin:0px auto;
                text-align: center;
                line-height: 130px;
                }
                button {
                background: black;
                color: white;
                font-size: 25px;
                margin-left: 700px;
                cursor: pointer;
                border-radius: 2px;
                }
                h1,p{
                text-align: center;
                }
    </style>
</head>
<body>
    <h1>Get the Inner Height</h1>
    <div class="demo"></div><br>
    <button>Click Me</button>
    <p>Click the above button to get the inner height of the box</p>
</body>
</html>

                                jQuery outerWidth() method
                            ==================================
The outerWidth() method in  jQuery is used to get or set the width of an element. It includes the padding and border.

Example :
=========
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>outerWidth() method</title>
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script>
        $(document).ready(function(){
        $("button").click(function(){
        var txt = "";
        txt += "Outer Width = " + $(".demo").outerWidth();
        $(".demo").html(txt);
        });
    });
    </script>
    <style>
        .demo {
                height: 130px;
                width: 400px;
                padding: 15px;
                margin: 12px;
                border: 2px double red;
                background: black;
                color: yellow;
                font-size: 30px;
                margin:0px auto;
                text-align: center;
                line-height: 130px;
                }
                button {
                background: black;
                color: white;
                font-size: 25px;
                margin-left: 700px;
                cursor: pointer;
                border-radius: 2px;
                }
                h1,p{
                text-align: center;
                }
    </style>
</head>
<body>
    <h1>Get the Outer Width</h1>
    <div class="demo"></div><br>
    <button>Click Me</button>
    <p>Click the above button to get the outer width of the box</p>
</body>
</html>


                                    jQuery outerHeight() method
                                ===================================
The outerHeight() method in jQuery is used to get or set the height of an element. It includes the padding and border.

Example:
--------

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>outerHeight() method</title>
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script>
        $(document).ready(function(){
        $("button").click(function(){
        var txt = "";
        txt += "Outer Height = " + $(".demo").outerHeight();
        $(".demo").html(txt);
        });
    });
    </script>
    <style>
        .demo {
                height: 130px;
                width: 400px;
                padding: 15px;
                margin: 12px;
                border: 2px double red;
                background: black;
                color: yellow;
                font-size: 30px;
                margin:0px auto;
                text-align: center;
                line-height: 130px;
                }
                button {
                background: black;
                color: white;
                font-size: 25px;
                margin-left: 700px;
                cursor: pointer;
                border-radius: 2px;
                }
                h1,p{
                text-align: center;
                }
    </style>
</head>
<body>
    <h1>Get the Outer Height</h1>
    <div class="demo"></div><br>
    <button>Click Me</button>
    <p>Click the above button to get the outer height of the box</p>
</body>
</html>




                                            jQuery – Get CSS Properties
                                        ====================================

The css() method is used in jQuery to get the CSS properties. In the below example, we will get the CSS Property color for <h2>. The font color property for the <h2> element will get returned:

Example:
--------
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>css() method</title>
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script>
        $(document).ready(function(){
        $("button").click(function(){
        alert("Font Color is " +$("h2").css("color"));
        });
    });
    </script>
    <style>
        h2 {
         color: white;
         background-color:orange;
        }
        button{
            background-color: teal;
            color: white;
            font-size: 20px;
            border-radius: 7px;
            cursor: pointer;
        }
    </style>
</head>
<body>
<h1>Heading 1</h1>
<p>This is demo text.</p>
<h2>Heading 2</h2>
<p>This is another demo text.</p>
<h2>Heading 2</h2>
<p>This is yet another demo text.</p>
 
<button>Get CSS Property</button>
</body>
</html>

                                    jQuery – Set CSS Properties
                                ===================================
The css() method is used in jQuery to set the CSS properties. In the below example, we will set the color property for the <h2> element. The font color property will be set to red for the <h2> element:

Example :
---------
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Set css() method</title>
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script>
      $(document).ready(function () {
        $("button").click(function () {
          $("h2").css("color","red");
        });
      });
    </script>
  </head>
  <body>
    <h1>Heading 1</h1>
    <p>This is demo text.</p>
    <h2>Heading 2</h2>
    <p>This is another demo text.</p>
    <h2>Heading 2</h2>
    <p>This is yet another demo text.</p>
    
    <button>Set CSS Property</button>
  </body>
</html>




                                    Set Multiple CSS Properties
                                ===================================
To set more than one CSS property, use the same css() method, and that too only once. In the below example, we will set 3 properties for the <h1> elements. Let us see the example:

Example :
---------



